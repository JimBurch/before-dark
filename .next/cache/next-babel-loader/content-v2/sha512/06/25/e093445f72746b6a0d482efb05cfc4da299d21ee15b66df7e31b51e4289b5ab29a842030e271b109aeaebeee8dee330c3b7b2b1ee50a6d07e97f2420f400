{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jim/Documents/coding/before-dark/components/Input.js\";\nimport { useState, useEffect } from 'react';\n\nconst Input = ({\n  toggle,\n  getSunset\n}) => {\n  const {\n    0: distance,\n    1: setDistance\n  } = useState('Select Distance');\n  const {\n    0: pace,\n    1: setPace\n  } = useState('Select Pace');\n  const {\n    0: zip,\n    1: setZip\n  } = useState('');\n  const {\n    0: miles,\n    1: setMiles\n  } = useState([]);\n  const {\n    0: minutes,\n    1: setMinutes\n  } = useState([]);\n\n  const handleDistance = e => {\n    setDistance(e.target.value);\n  };\n\n  const handlePace = e => {\n    setPace(e.target.value);\n  };\n\n  const handleZip = e => {\n    setZip(e.target.value);\n  };\n\n  const buildMilesArray = () => {\n    const result = [];\n\n    for (let i = 1; i <= 10; i += 0.5) {\n      result.push(i.toFixed(1));\n    }\n\n    setMiles(result);\n  };\n\n  const buildMinutesArray = () => {\n    const result = [];\n    let minutes = 7;\n    let seconds = 0;\n\n    while (minutes <= 15) {\n      if (seconds === 0) {\n        result.push(minutes + ':00');\n      } else {\n        result.push(minutes + ':' + seconds);\n      }\n\n      if (seconds === 45) {\n        minutes += 1;\n        seconds = 0;\n      } else {\n        seconds += 15;\n      }\n    }\n\n    setMinutes(result);\n  };\n\n  useEffect(() => {\n    if (!toggle) {\n      setDistance('Select Distance');\n      setPace('Select Pace');\n      setZip('');\n    }\n\n    ;\n    buildMilesArray();\n    buildMinutesArray();\n  }, [toggle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => getSunset(e, zip, distance, pace),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"How many miles do you want to run?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), distance ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected\",\n        children: [distance, \" mile(s) total\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleDistance,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          defaultValue: distance,\n          children: distance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), miles.map((mile, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: mile,\n          children: mile\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-line\",\n        children: \"How many minutes do you think it will take to run each mile, on average?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), pace ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected\",\n        children: [pace, \" minutes per mile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handlePace,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          defaultValue: pace,\n          children: pace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), minutes.map((minute, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: minute,\n          children: minute\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-line\",\n        children: \"What's your zip code?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-line\",\n        className: \"zip-form\",\n        type: \"text\",\n        value: zip,\n        placeholder: \"5 digit zip code\",\n        maxLength: \"5\",\n        onChange: handleZip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"We use this to find your local sunset time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/jim/Documents/coding/before-dark/components/Input.js"],"names":["useState","useEffect","Input","toggle","getSunset","distance","setDistance","pace","setPace","zip","setZip","miles","setMiles","minutes","setMinutes","handleDistance","e","target","value","handlePace","handleZip","buildMilesArray","result","i","push","toFixed","buildMinutesArray","seconds","map","mile","index","minute"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AACvC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC,iBAAD,CAAxC;AACA,QAAM;AAAA,OAACO,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,aAAD,CAAhC;AACA,QAAM;AAAA,OAACS,GAAD;AAAA,OAAMC;AAAN,MAAgBV,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMe,cAAc,GAAGC,CAAC,IAAI;AAC1BV,IAAAA,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAGH,CAAC,IAAI;AACtBR,IAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAGA,QAAME,SAAS,GAAGJ,CAAC,IAAI;AACrBN,IAAAA,MAAM,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACD,GAFD;;AAIA,QAAMG,eAAe,GAAG,MAAM;AAC5B,UAAMC,MAAM,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,IAAI,GAA9B,EAAmC;AACjCD,MAAAA,MAAM,CAACE,IAAP,CAAYD,CAAC,CAACE,OAAF,CAAU,CAAV,CAAZ;AACD;;AACDb,IAAAA,QAAQ,CAACU,MAAD,CAAR;AACD,GAND;;AAQA,QAAMI,iBAAiB,GAAG,MAAM;AAC9B,UAAMJ,MAAM,GAAG,EAAf;AACA,QAAIT,OAAO,GAAG,CAAd;AACA,QAAIc,OAAO,GAAG,CAAd;;AACA,WAAOd,OAAO,IAAI,EAAlB,EAAsB;AACpB,UAAIc,OAAO,KAAK,CAAhB,EAAmB;AACjBL,QAAAA,MAAM,CAACE,IAAP,CAAYX,OAAO,GAAG,KAAtB;AACD,OAFD,MAEO;AACLS,QAAAA,MAAM,CAACE,IAAP,CAAYX,OAAO,GAAG,GAAV,GAAgBc,OAA5B;AACD;;AACD,UAAIA,OAAO,KAAK,EAAhB,EAAoB;AAClBd,QAAAA,OAAO,IAAI,CAAX;AACAc,QAAAA,OAAO,GAAG,CAAV;AACD,OAHD,MAGO;AACLA,QAAAA,OAAO,IAAI,EAAX;AACD;AACF;;AACDb,IAAAA,UAAU,CAACQ,MAAD,CAAV;AACD,GAlBD;;AAoBArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACE,MAAL,EAAa;AACXG,MAAAA,WAAW,CAAC,iBAAD,CAAX;AACAE,MAAAA,OAAO,CAAC,aAAD,CAAP;AACAE,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;;AAAA;AACDW,IAAAA,eAAe;AACfK,IAAAA,iBAAiB;AAClB,GARQ,EAQN,CAACvB,MAAD,CARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEa,CAAC,IAAIZ,SAAS,CAACY,CAAD,EAAIP,GAAJ,EAASJ,QAAT,EAAmBE,IAAnB,CAA9B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,QAAQ,gBAAG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,mBAA2BA,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA8D,IAFzE,eAGE;AAAQ,QAAA,QAAQ,EAAEU,cAAlB;AAAA,gCACE;AAAQ,UAAA,YAAY,EAAEV,QAAtB;AAAA,oBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGM,KAAK,CAACiB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT;AAAoB,UAAA,KAAK,EAAED,IAA3B;AAAA,oBAAkCA;AAAlC,WAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eASE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAUGvB,IAAI,gBAAG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,mBAA2BA,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA6D,IAVpE,eAWE;AAAQ,QAAA,QAAQ,EAAEY,UAAlB;AAAA,gCACE;AAAQ,UAAA,YAAY,EAAEZ,IAAtB;AAAA,oBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGM,OAAO,CAACe,GAAR,CAAY,CAACG,MAAD,EAASD,KAAT,kBACX;AAAoB,UAAA,KAAK,EAAEC,MAA3B;AAAA,oBAAoCA;AAApC,WAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAiBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAkBE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,SAAS,EAAC,UAAxC;AAAmD,QAAA,IAAI,EAAC,MAAxD;AAA+D,QAAA,KAAK,EAAErB,GAAtE;AAA2E,QAAA,WAAW,EAAC,kBAAvF;AAA0G,QAAA,SAAS,EAAC,GAApH;AAAwH,QAAA,QAAQ,EAAEW;AAAlI;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAjFD;;AAmFA,eAAelB,KAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Input = ({ toggle, getSunset }) => {\n  const [distance, setDistance] = useState('Select Distance');\n  const [pace, setPace] = useState('Select Pace');\n  const [zip, setZip] = useState('');\n  const [miles, setMiles] = useState([]);\n  const [minutes, setMinutes] = useState([]);\n\n  const handleDistance = e => {\n    setDistance(e.target.value);\n  }\n  const handlePace = e => {\n    setPace(e.target.value);\n  }\n  const handleZip = e => {\n    setZip(e.target.value);\n  }\n\n  const buildMilesArray = () => {\n    const result = [];\n    for (let i = 1; i <= 10; i += 0.5) {\n      result.push(i.toFixed(1));\n    }\n    setMiles(result);\n  };\n\n  const buildMinutesArray = () => {\n    const result = [];\n    let minutes = 7;\n    let seconds = 0;\n    while (minutes <= 15) {\n      if (seconds === 0) {\n        result.push(minutes + ':00');\n      } else {\n        result.push(minutes + ':' + seconds);\n      }\n      if (seconds === 45) {\n        minutes += 1;\n        seconds = 0;\n      } else {\n        seconds += 15;\n      }\n    }\n    setMinutes(result);\n  };\n\n  useEffect(() => {\n    if (!toggle) {\n      setDistance('Select Distance');\n      setPace('Select Pace');\n      setZip('');\n    };\n    buildMilesArray();\n    buildMinutesArray();\n  }, [toggle])\n\n  return (\n    <div className=\"input-container\">\n      <form onSubmit={e => getSunset(e, zip, distance, pace)}>\n        <div>How many miles do you want to run?</div>\n        {distance ? <div className=\"selected\">{distance} mile(s) total</div> : null}\n        <select onChange={handleDistance}>\n          <option defaultValue={distance}>{distance}</option>\n          {miles.map((mile, index) => (\n            <option key={index} value={mile}>{mile}</option>\n          ))}\n        </select>\n        <div className=\"input-line\">How many minutes do you think it will take to run each mile, on average?</div>\n        {pace ? <div className=\"selected\">{pace} minutes per mile</div> : null}\n        <select onChange={handlePace}>\n          <option defaultValue={pace}>{pace}</option>\n          {minutes.map((minute, index) => (\n            <option key={index} value={minute}>{minute}</option>\n          ))}\n        </select>\n        <div className=\"input-line\">What's your zip code?</div>\n        <input className=\"input-line\" className=\"zip-form\" type=\"text\" value={zip} placeholder=\"5 digit zip code\" maxLength=\"5\" onChange={handleZip} />\n        <div>We use this to find your local sunset time.</div>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}