{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jim/Documents/coding/before-dark/pages/index.js\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Input from '../components/Input';\nimport Result from '../components/Result';\n\nconst Index = () => {\n  const {\n    0: sunset,\n    1: setSunset\n  } = useState('');\n  const {\n    0: runTime,\n    1: setRunTime\n  } = useState('');\n  const {\n    0: leaveTime,\n    1: setLeaveTime\n  } = useState('');\n  const {\n    0: toggle,\n    1: setToggle\n  } = useState(false);\n\n  const getSunset = (e, zip, distance, pace) => {\n    e.preventDefault();\n    const options = {\n      url: `http://localhost:8000/sunset/${zip}`,\n      method: 'get'\n    };\n    axios(options).then(response => {\n      runCalc(response.data, distance, pace, zip);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const runCalc = (sunset, distance, pace, zip) => {\n    let localSunset = findLocalSunset(sunset);\n    let runLength = findRunTime(distance, pace);\n    let timeToLeave = findLeaveTime(localSunset, runLength);\n    setSunset(militaryToStandard(localSunset));\n    setRunTime(runLength);\n    setLeaveTime(timeToLeave);\n    setToggle(true);\n    const options = {\n      url: 'http://localhost:8000/leave',\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: {\n        zip,\n        sunset: militaryToStandard(localSunset),\n        distance,\n        pace,\n        runTime: runLength,\n        leaveTime: timeToLeave\n      }\n    };\n    axios(options).then(response => {\n      console.log('Leave stats saved! ', response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const clearResult = e => {\n    e.preventDefault();\n    setToggle(false);\n  };\n\n  const findLocalSunset = time => {\n    let [month, date, year] = new Date().toLocaleDateString('en-US', {\n      timeZone: 'Europe/London'\n    }).split('/');\n    let local = new Date(`${month}/${date}/${year} ${time} UTC`);\n    let localTime = local.toTimeString();\n    return localTime;\n  };\n\n  const findRunTime = (distance, pace) => {\n    let numDist = Number(distance);\n    let totalSeconds = minutesToSeconds(pace);\n    let runTimeInSeconds = numDist * totalSeconds;\n    let runTime = secondsToMinutes(runTimeInSeconds);\n    return runTime;\n  };\n\n  const findLeaveTime = (sundown, run) => {\n    let sunsetSeconds = hoursToSeconds(sundown);\n    let runSeconds = minutesToSeconds(run);\n    let leaveTimeInSeconds = sunsetSeconds - runSeconds;\n    let leaveTime = secondsToHours(leaveTimeInSeconds);\n    return leaveTime;\n  };\n\n  const minutesToSeconds = time => {\n    let parts = time.split(':');\n    parts = parts.map(Number);\n    return parts[0] * 60 + parts[1];\n  };\n\n  const secondsToMinutes = time => {\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    return minutes + ':' + seconds;\n  };\n\n  const hoursToSeconds = time => {\n    let parts = time.split(/[ :]+/);\n    parts = parts.map(Number);\n    return parts[0] * 3600 + parts[1] * 60 + parts[2];\n  };\n\n  const secondsToHours = time => {\n    let hours = Math.floor(time / 3600);\n    time = time - hours * 3600;\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    let ampm = 'PM';\n\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n\n    if (hours < 12) {\n      ampm = 'AM';\n    }\n\n    if (hours > 12) {\n      hours -= 12;\n    }\n\n    return hours + ':' + minutes + ' ' + ampm;\n  };\n\n  const militaryToStandard = time => {\n    let parts = time.split(/[ :]+/);\n    let hours = Number(parts[0]);\n    let minutes = Number(parts[1]);\n    let ampm = 'PM';\n\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n\n    if (hours < 12) {\n      ampm = 'AM';\n    }\n\n    if (hours > 12) {\n      hours -= 12;\n    }\n\n    return hours + ':' + minutes + ' ' + ampm;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Before Dark \\uD83C\\uDF19\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tagline\",\n          children: \"A runner's companion app so you can beat the sunset.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          toggle: toggle,\n          getSunset: getSunset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: toggle ? /*#__PURE__*/_jsxDEV(Result, {\n          className: \"result\",\n          sunset: sunset,\n          runTime: runTime,\n          leaveTime: leaveTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: toggle ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"again-btn\",\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: e => clearResult(e),\n        children: \"Run Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/jim/Documents/coding/before-dark/pages/index.js"],"names":["useState","useEffect","axios","Input","Result","Index","sunset","setSunset","runTime","setRunTime","leaveTime","setLeaveTime","toggle","setToggle","getSunset","e","zip","distance","pace","preventDefault","options","url","method","then","response","runCalc","data","catch","error","console","log","localSunset","findLocalSunset","runLength","findRunTime","timeToLeave","findLeaveTime","militaryToStandard","headers","clearResult","time","month","date","year","Date","toLocaleDateString","timeZone","split","local","localTime","toTimeString","numDist","Number","totalSeconds","minutesToSeconds","runTimeInSeconds","secondsToMinutes","sundown","run","sunsetSeconds","hoursToSeconds","runSeconds","leaveTimeInSeconds","secondsToHours","parts","map","minutes","Math","floor","seconds","hours","ampm"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Input from '../components/Input';\nimport Result from '../components/Result';\n\nconst Index = () => {\n  const [sunset, setSunset] = useState('');\n  const [runTime, setRunTime] = useState('');\n  const [leaveTime, setLeaveTime] = useState('');\n  const [toggle, setToggle] = useState(false);\n\n  const getSunset = (e, zip, distance, pace) => {\n    e.preventDefault();\n    const options = {\n      url: `http://localhost:8000/sunset/${zip}`,\n      method: 'get'\n    }\n\n    axios(options)\n    .then((response) => {\n      runCalc(response.data, distance, pace, zip);\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  const runCalc = (sunset, distance, pace, zip) => {\n    let localSunset = findLocalSunset(sunset);\n    let runLength = findRunTime(distance, pace);\n    let timeToLeave = findLeaveTime(localSunset, runLength);\n    setSunset(militaryToStandard(localSunset));\n    setRunTime(runLength);\n    setLeaveTime(timeToLeave);\n    setToggle(true);\n\n    const options = {\n      url: 'http://localhost:8000/leave',\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: {\n        zip,\n        sunset: militaryToStandard(localSunset),\n        distance,\n        pace,\n        runTime: runLength,\n        leaveTime: timeToLeave\n      }\n    }\n    axios(options)\n    .then((response) => {\n      console.log('Leave stats saved! ', response);\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  const clearResult = e => {\n    e.preventDefault();\n    setToggle(false);\n  }\n\n  const findLocalSunset = (time) => {\n    let [month, date, year] = new Date().toLocaleDateString('en-US', { timeZone: 'Europe/London' }).split('/');\n    let local = new Date(`${month}/${date}/${year} ${time} UTC`)\n    let localTime = local.toTimeString();\n    return localTime;\n  }\n\n  const findRunTime = (distance, pace) => {\n    let numDist = Number(distance);\n    let totalSeconds = minutesToSeconds(pace);\n    let runTimeInSeconds = numDist * totalSeconds;\n    let runTime = secondsToMinutes(runTimeInSeconds);\n    return runTime;\n  }\n\n  const findLeaveTime = (sundown, run) => {\n    let sunsetSeconds = hoursToSeconds(sundown);\n    let runSeconds = minutesToSeconds(run);\n    let leaveTimeInSeconds = sunsetSeconds - runSeconds;\n    let leaveTime = secondsToHours(leaveTimeInSeconds);\n    return leaveTime;\n  }\n\n  const minutesToSeconds = time => {\n    let parts = time.split(':');\n    parts = parts.map(Number);\n    return (parts[0] * 60) + parts[1];\n  }\n\n  const secondsToMinutes = time => {\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    return minutes + ':' + seconds;\n  }\n\n  const hoursToSeconds = time => {\n    let parts = time.split(/[ :]+/);\n    parts = parts.map(Number);\n    return (parts[0] * 3600) + (parts[1] * 60) + parts[2];\n  }\n\n  const secondsToHours = time => {\n    let hours = Math.floor(time / 3600);\n    time = time - hours * 3600;\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    let ampm = 'PM'\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n    if (hours < 12) {\n      ampm = 'AM'\n    }\n    if (hours > 12) {\n      hours -= 12;\n    }\n    return hours + ':' + minutes + ' ' + ampm;\n  }\n\n  const militaryToStandard = time => {\n    let parts = time.split(/[ :]+/);\n    let hours = Number(parts[0]);\n    let minutes = Number(parts[1]);\n    let ampm = 'PM'\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n    if (hours < 12) {\n      ampm = 'AM'\n    }\n    if (hours > 12) {\n      hours -= 12;\n    }\n    return hours + ':' + minutes + ' ' + ampm;\n  }\n\n  return (\n    <Container className=\"app-container\">\n      <Row>\n        <Col>\n          <h1>Before Dark 🌙</h1>\n          <div className=\"tagline\">A runner's companion app so you can beat the sunset.</div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input toggle={toggle} getSunset={getSunset} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {toggle ? <Result className=\"result\" sunset={sunset} runTime={runTime} leaveTime={leaveTime} /> : null}\n        </Col>\n      </Row>\n\n        <Row>\n          {toggle ? <Button className=\"again-btn\" variant=\"primary\" type=\"submit\" onClick={e => clearResult(e)}>Run Again</Button> : null}\n        </Row>\n\n    </Container>\n  );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}