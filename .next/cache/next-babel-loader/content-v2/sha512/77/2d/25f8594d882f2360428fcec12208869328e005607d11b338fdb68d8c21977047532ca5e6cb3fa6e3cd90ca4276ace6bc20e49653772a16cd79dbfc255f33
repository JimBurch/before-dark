{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jim/Documents/coding/before-dark/components/Input.js\";\nimport { useState, useEffect } from 'react';\n\nconst Input = ({\n  toggle,\n  getSunset\n}) => {\n  const {\n    0: distance,\n    1: setDistance\n  } = useState('');\n  const {\n    0: pace,\n    1: setPace\n  } = useState('');\n  const {\n    0: zip,\n    1: setZip\n  } = useState('');\n\n  const handleDistance = e => {\n    setDistance(e);\n  };\n\n  const handlePace = e => {\n    setPace(e);\n  };\n\n  const handleZip = e => {\n    setZip(e.target.value);\n  };\n\n  useEffect(() => {\n    if (!toggle) {\n      setDistance('');\n      setPace('');\n      setZip('');\n    }\n  }, [toggle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => getSunset(e, zip, distance, pace),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"How many miles do you want to run?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), distance ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected\",\n        children: [distance, \" mile(s) total\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"select\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-line\",\n        children: \"How many minutes do you think it will take to run each mile, on average?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), pace ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected\",\n        children: [pace, \" minutes per mile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-line\",\n        children: \"What's your zip code?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-line\",\n        className: \"zip-form\",\n        type: \"text\",\n        value: zip,\n        placeholder: \"5 digit zip code\",\n        maxLength: \"5\",\n        onChange: handleZip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"We use this to find your local sunset time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/jim/Documents/coding/before-dark/components/Input.js"],"names":["useState","useEffect","Input","toggle","getSunset","distance","setDistance","pace","setPace","zip","setZip","handleDistance","e","handlePace","handleZip","target","value"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AACvC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACO,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACS,GAAD;AAAA,OAAMC;AAAN,MAAgBV,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMW,cAAc,GAAGC,CAAC,IAAI;AAC1BN,IAAAA,WAAW,CAACM,CAAD,CAAX;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAGD,CAAC,IAAI;AACtBJ,IAAAA,OAAO,CAACI,CAAD,CAAP;AACD,GAFD;;AAGA,QAAME,SAAS,GAAGF,CAAC,IAAI;AACrBF,IAAAA,MAAM,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAAN;AACD,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACE,MAAL,EAAa;AACXG,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GANQ,EAMN,CAACP,MAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAES,CAAC,IAAIR,SAAS,CAACQ,CAAD,EAAIH,GAAJ,EAASJ,QAAT,EAAmBE,IAAnB,CAA9B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,QAAQ,gBAAG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,mBAA2BA,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA8D,IAFzE,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eA6BE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF,EA8BGE,IAAI,gBAAG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,mBAA2BA,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA6D,IA9BpE,eAqDI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArDJ,eAsDI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,SAAS,EAAC,UAAxC;AAAmD,QAAA,IAAI,EAAC,MAAxD;AAA+D,QAAA,KAAK,EAAEE,GAAtE;AAA2E,QAAA,WAAW,EAAC,kBAAvF;AAA0G,QAAA,SAAS,EAAC,GAApH;AAAwH,QAAA,QAAQ,EAAEK;AAAlI;AAAA;AAAA;AAAA;AAAA,cAtDJ,eAuDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvDJ,eAwDE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAxDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8DD,CArFD;;AAuFA,eAAeZ,KAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Input = ({ toggle, getSunset }) => {\n  const [distance, setDistance] = useState('');\n  const [pace, setPace] = useState('');\n  const [zip, setZip] = useState('');\n\n  const handleDistance = e => {\n    setDistance(e);\n  }\n  const handlePace = e => {\n    setPace(e);\n  }\n  const handleZip = e => {\n    setZip(e.target.value);\n  }\n\n  useEffect(() => {\n    if (!toggle) {\n      setDistance('');\n      setPace('');\n      setZip('');\n    }\n  }, [toggle])\n\n  return (\n    <div className=\"input-container\">\n      <form onSubmit={e => getSunset(e, zip, distance, pace)}>\n        <div>How many miles do you want to run?</div>\n        {distance ? <div className=\"selected\">{distance} mile(s) total</div> : null}\n\n          <select>\n\n          </select>\n\n          {/* <DropdownButton className=\"input-line\" title=\"Select Miles\" onSelect={handleDistance}>\n            <Dropdown.Item eventKey=\"1.0\">1.0</Dropdown.Item>\n            <Dropdown.Item eventKey=\"1.5\">1.5</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2.0\">2.0</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2.5\">2.5</Dropdown.Item>\n            <Dropdown.Item eventKey=\"3.0\">3.0</Dropdown.Item>\n            <Dropdown.Item eventKey=\"3.5\">3.5</Dropdown.Item>\n            <Dropdown.Item eventKey=\"4.0\">4.0</Dropdown.Item>\n            <Dropdown.Item eventKey=\"4.5\">4.5</Dropdown.Item>\n            <Dropdown.Item eventKey=\"5.0\">5.0</Dropdown.Item>\n            <Dropdown.Item eventKey=\"5.5\">5.5</Dropdown.Item>\n            <Dropdown.Item eventKey=\"6.0\">6.0</Dropdown.Item>\n            <Dropdown.Item eventKey=\"6.5\">6.5</Dropdown.Item>\n            <Dropdown.Item eventKey=\"7.0\">7.0</Dropdown.Item>\n            <Dropdown.Item eventKey=\"7.5\">7.5</Dropdown.Item>\n            <Dropdown.Item eventKey=\"8.0\">8.0</Dropdown.Item>\n            <Dropdown.Item eventKey=\"8.5\">8.5</Dropdown.Item>\n            <Dropdown.Item eventKey=\"9.0\">9.0</Dropdown.Item>\n            <Dropdown.Item eventKey=\"9.5\">9.5</Dropdown.Item>\n            <Dropdown.Item eventKey=\"10.0\">10.0</Dropdown.Item>\n          </DropdownButton> */}\n        <div className=\"input-line\">How many minutes do you think it will take to run each mile, on average?</div>\n        {pace ? <div className=\"selected\">{pace} minutes per mile</div> : null}\n          {/* <DropdownButton className=\"input-line\" title=\"Select Pace\" onSelect={handlePace}>\n            <Dropdown.Item eventKey=\"7:30\">7:30</Dropdown.Item>\n            <Dropdown.Item eventKey=\"7:45\">7:45</Dropdown.Item>\n            <Dropdown.Item eventKey=\"8:00\">8:00</Dropdown.Item>\n            <Dropdown.Item eventKey=\"8:15\">8:15</Dropdown.Item>\n            <Dropdown.Item eventKey=\"8:30\">8:30</Dropdown.Item>\n            <Dropdown.Item eventKey=\"8:45\">8:45</Dropdown.Item>\n            <Dropdown.Item eventKey=\"9:00\">9:00</Dropdown.Item>\n            <Dropdown.Item eventKey=\"9:15\">9:15</Dropdown.Item>\n            <Dropdown.Item eventKey=\"9:30\">9:30</Dropdown.Item>\n            <Dropdown.Item eventKey=\"9:45\">9:45</Dropdown.Item>\n            <Dropdown.Item eventKey=\"10:00\">10:00</Dropdown.Item>\n            <Dropdown.Item eventKey=\"10:15\">10:15</Dropdown.Item>\n            <Dropdown.Item eventKey=\"10:30\">10:30</Dropdown.Item>\n            <Dropdown.Item eventKey=\"10:45\">10:45</Dropdown.Item>\n            <Dropdown.Item eventKey=\"11:00\">11:00</Dropdown.Item>\n            <Dropdown.Item eventKey=\"11:15\">11:15</Dropdown.Item>\n            <Dropdown.Item eventKey=\"11:30\">11:30</Dropdown.Item>\n            <Dropdown.Item eventKey=\"11:45\">11:45</Dropdown.Item>\n            <Dropdown.Item eventKey=\"11:45\">11:45</Dropdown.Item>\n            <Dropdown.Item eventKey=\"12:00\">12:00</Dropdown.Item>\n          </DropdownButton> */}\n          <div className=\"input-line\">What's your zip code?</div>\n          <input className=\"input-line\" className=\"zip-form\" type=\"text\" value={zip} placeholder=\"5 digit zip code\" maxLength=\"5\" onChange={handleZip} />\n          <div>We use this to find your local sunset time.</div>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}