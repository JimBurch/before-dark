{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/jim/Documents/coding/before-dark/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jim/Documents/coding/before-dark/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Input from '../components/Input';\nimport Result from '../components/Result';\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState(''),\n      sunset = _useState[0],\n      setSunset = _useState[1];\n\n  var _useState2 = useState(''),\n      runTime = _useState2[0],\n      setRunTime = _useState2[1];\n\n  var _useState3 = useState(''),\n      leaveTime = _useState3[0],\n      setLeaveTime = _useState3[1];\n\n  var _useState4 = useState(false),\n      toggle = _useState4[0],\n      setToggle = _useState4[1];\n\n  var getSunset = function getSunset(e, zip, distance, pace) {\n    e.preventDefault();\n    var options = {\n      url: \"http://localhost:8000/sunset/\".concat(zip),\n      method: 'get'\n    };\n    axios(options).then(function (response) {\n      runCalc(response.data, distance, pace, zip);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  var runCalc = function runCalc(sunset, distance, pace, zip) {\n    var localSunset = findLocalSunset(sunset);\n    var runLength = findRunTime(distance, pace);\n    var timeToLeave = findLeaveTime(localSunset, runLength);\n    setSunset(militaryToStandard(localSunset));\n    setRunTime(runLength);\n    setLeaveTime(timeToLeave);\n    setToggle(true);\n    var options = {\n      url: 'http://localhost:8000/leave',\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: {\n        zip: zip,\n        sunset: militaryToStandard(localSunset),\n        distance: distance,\n        pace: pace,\n        runTime: runLength,\n        leaveTime: timeToLeave\n      }\n    };\n    axios(options).then(function (response) {\n      console.log('Leave stats saved! ', response);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  var clearResult = function clearResult(e) {\n    e.preventDefault();\n    setToggle(false);\n  };\n\n  var findLocalSunset = function findLocalSunset(time) {\n    var _Date$toLocaleDateStr = new Date().toLocaleDateString('en-US', {\n      timeZone: 'Europe/London'\n    }).split('/'),\n        _Date$toLocaleDateStr2 = _slicedToArray(_Date$toLocaleDateStr, 3),\n        month = _Date$toLocaleDateStr2[0],\n        date = _Date$toLocaleDateStr2[1],\n        year = _Date$toLocaleDateStr2[2];\n\n    var local = new Date(\"\".concat(month, \"/\").concat(date, \"/\").concat(year, \" \").concat(time, \" UTC\"));\n    var localTime = local.toTimeString();\n    return localTime;\n  };\n\n  var findRunTime = function findRunTime(distance, pace) {\n    var numDist = Number(distance);\n    var totalSeconds = minutesToSeconds(pace);\n    var runTimeInSeconds = numDist * totalSeconds;\n    var runTime = secondsToMinutes(runTimeInSeconds);\n    return runTime;\n  };\n\n  var findLeaveTime = function findLeaveTime(sundown, run) {\n    var sunsetSeconds = hoursToSeconds(sundown);\n    var runSeconds = minutesToSeconds(run);\n    var leaveTimeInSeconds = sunsetSeconds - runSeconds;\n    var leaveTime = secondsToHours(leaveTimeInSeconds);\n    return leaveTime;\n  };\n\n  var minutesToSeconds = function minutesToSeconds(time) {\n    var parts = time.split(':');\n    parts = parts.map(Number);\n    return parts[0] * 60 + parts[1];\n  };\n\n  var secondsToMinutes = function secondsToMinutes(time) {\n    var minutes = Math.floor(time / 60);\n    var seconds = time - minutes * 60;\n    return minutes + ':' + seconds;\n  };\n\n  var hoursToSeconds = function hoursToSeconds(time) {\n    var parts = time.split(/[ :]+/);\n    parts = parts.map(Number);\n    return parts[0] * 3600 + parts[1] * 60 + parts[2];\n  };\n\n  var secondsToHours = function secondsToHours(time) {\n    var hours = Math.floor(time / 3600);\n    time = time - hours * 3600;\n    var minutes = Math.floor(time / 60);\n    var seconds = time - minutes * 60;\n    var ampm = 'PM';\n\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n\n    if (hours < 12) {\n      ampm = 'AM';\n    }\n\n    if (hours > 12) {\n      hours -= 12;\n    }\n\n    return hours + ':' + minutes + ' ' + ampm;\n  };\n\n  var militaryToStandard = function militaryToStandard(time) {\n    var parts = time.split(/[ :]+/);\n    var hours = Number(parts[0]);\n    var minutes = Number(parts[1]);\n    var ampm = 'PM';\n\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n\n    if (hours < 12) {\n      ampm = 'AM';\n    }\n\n    if (hours > 12) {\n      hours -= 12;\n    }\n\n    return hours + ':' + minutes + ' ' + ampm;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Before Dark \\uD83C\\uDF19\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tagline\",\n      children: \"A runner's companion app so you can beat the sunset.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, _this), toggle ? /*#__PURE__*/_jsxDEV(Result, {\n      className: \"result\",\n      sunset: sunset,\n      runTime: runTime,\n      leaveTime: leaveTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, _this) : null, toggle ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"again-btn\",\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: function onClick(e) {\n        return clearResult(e);\n      },\n      children: \"Run Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, _this) : null, /*#__PURE__*/_jsxDEV(Input, {\n      toggle: toggle,\n      getSunset: getSunset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Index, \"DJHhU+b/t9VHOXjtn7TmoI7uZCE=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/jim/Documents/coding/before-dark/pages/index.js"],"names":["useState","useEffect","axios","Input","Result","Index","sunset","setSunset","runTime","setRunTime","leaveTime","setLeaveTime","toggle","setToggle","getSunset","e","zip","distance","pace","preventDefault","options","url","method","then","response","runCalc","data","error","console","log","localSunset","findLocalSunset","runLength","findRunTime","timeToLeave","findLeaveTime","militaryToStandard","headers","clearResult","time","Date","toLocaleDateString","timeZone","split","month","date","year","local","localTime","toTimeString","numDist","Number","totalSeconds","minutesToSeconds","runTimeInSeconds","secondsToMinutes","sundown","run","sunsetSeconds","hoursToSeconds","runSeconds","leaveTimeInSeconds","secondsToHours","parts","map","minutes","Math","floor","seconds","hours","ampm"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Input from '../components/Input';\nimport Result from '../components/Result';\n\nconst Index = () => {\n  const [sunset, setSunset] = useState('');\n  const [runTime, setRunTime] = useState('');\n  const [leaveTime, setLeaveTime] = useState('');\n  const [toggle, setToggle] = useState(false);\n\n  const getSunset = (e, zip, distance, pace) => {\n    e.preventDefault();\n    const options = {\n      url: `http://localhost:8000/sunset/${zip}`,\n      method: 'get'\n    }\n\n    axios(options)\n    .then((response) => {\n      runCalc(response.data, distance, pace, zip);\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  const runCalc = (sunset, distance, pace, zip) => {\n    let localSunset = findLocalSunset(sunset);\n    let runLength = findRunTime(distance, pace);\n    let timeToLeave = findLeaveTime(localSunset, runLength);\n    setSunset(militaryToStandard(localSunset));\n    setRunTime(runLength);\n    setLeaveTime(timeToLeave);\n    setToggle(true);\n\n    const options = {\n      url: 'http://localhost:8000/leave',\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: {\n        zip,\n        sunset: militaryToStandard(localSunset),\n        distance,\n        pace,\n        runTime: runLength,\n        leaveTime: timeToLeave\n      }\n    }\n    axios(options)\n    .then((response) => {\n      console.log('Leave stats saved! ', response);\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  const clearResult = e => {\n    e.preventDefault();\n    setToggle(false);\n  }\n\n  const findLocalSunset = (time) => {\n    let [month, date, year] = new Date().toLocaleDateString('en-US', { timeZone: 'Europe/London' }).split('/');\n    let local = new Date(`${month}/${date}/${year} ${time} UTC`)\n    let localTime = local.toTimeString();\n    return localTime;\n  }\n\n  const findRunTime = (distance, pace) => {\n    let numDist = Number(distance);\n    let totalSeconds = minutesToSeconds(pace);\n    let runTimeInSeconds = numDist * totalSeconds;\n    let runTime = secondsToMinutes(runTimeInSeconds);\n    return runTime;\n  }\n\n  const findLeaveTime = (sundown, run) => {\n    let sunsetSeconds = hoursToSeconds(sundown);\n    let runSeconds = minutesToSeconds(run);\n    let leaveTimeInSeconds = sunsetSeconds - runSeconds;\n    let leaveTime = secondsToHours(leaveTimeInSeconds);\n    return leaveTime;\n  }\n\n  const minutesToSeconds = time => {\n    let parts = time.split(':');\n    parts = parts.map(Number);\n    return (parts[0] * 60) + parts[1];\n  }\n\n  const secondsToMinutes = time => {\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    return minutes + ':' + seconds;\n  }\n\n  const hoursToSeconds = time => {\n    let parts = time.split(/[ :]+/);\n    parts = parts.map(Number);\n    return (parts[0] * 3600) + (parts[1] * 60) + parts[2];\n  }\n\n  const secondsToHours = time => {\n    let hours = Math.floor(time / 3600);\n    time = time - hours * 3600;\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    let ampm = 'PM'\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n    if (hours < 12) {\n      ampm = 'AM'\n    }\n    if (hours > 12) {\n      hours -= 12;\n    }\n    return hours + ':' + minutes + ' ' + ampm;\n  }\n\n  const militaryToStandard = time => {\n    let parts = time.split(/[ :]+/);\n    let hours = Number(parts[0]);\n    let minutes = Number(parts[1]);\n    let ampm = 'PM'\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n    if (hours < 12) {\n      ampm = 'AM'\n    }\n    if (hours > 12) {\n      hours -= 12;\n    }\n    return hours + ':' + minutes + ' ' + ampm;\n  }\n\n  return (\n    <div className=\"app-container\">\n      <h1>Before Dark 🌙</h1>\n      <div className=\"tagline\">A runner's companion app so you can beat the sunset.</div>\n      {toggle ? <Result className=\"result\" sunset={sunset} runTime={runTime} leaveTime={leaveTime} /> : null}\n      {toggle ? <button className=\"again-btn\" variant=\"primary\" type=\"submit\" onClick={e => clearResult(e)}>Run Again</button> : null}\n      <Input toggle={toggle} getSunset={getSunset} />\n    </div>\n  );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}